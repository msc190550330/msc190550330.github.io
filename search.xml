<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>定位</title>
      <link href="/2021/12/10/%E5%AE%9A%E4%BD%8D/"/>
      <url>/2021/12/10/%E5%AE%9A%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="定位的简介"><a href="#定位的简介" class="headerlink" title="定位的简介"></a>定位的简介</h2><p>定位是一种更加高级的布局手段，通过定位可以将元素放在页面的任意位置；定位使用position属性来开启设置<br>可选值</p><blockquote><p>static 默认值 元素是静止的没有开启定位<br>relative 开启元素的相对定位<br>absolute 开启元素的绝对定位<br>fixed 开启元素的固定定位<br>sticky 开启元素的粘滞定位</p></blockquote><h2 id="相对定位和绝对定位（重点）"><a href="#相对定位和绝对定位（重点）" class="headerlink" title="相对定位和绝对定位（重点）"></a>相对定位和绝对定位（重点）</h2><p>当元素的position属性值设置为relative时则开启了元素的相对定位，相对定位有以下特点：</p><ol><li>开启后，如果没有设置偏移量，元素不会发生任何变化</li><li>相对定位是参照于元素在文档流中的位置进行定位的</li><li>相对定位会提升元素的层级</li><li>相对定位不会使元素脱离文档流</li><li>相对定位不会改变元素的性质，块还是块，行内还是行内<br>偏移量（offset）包括：top,bottom,right,left;分别代表着定位元素与定位位置的上、下、右、左边的距离；其中上下用来控制垂直方向的位置，左右控制水平方向<br>当设置为absolute时，则开启了元素的绝对定位，绝对定位是要配合相对定位来使用的，他有以下特点：</li><li>如果不设置偏移量，元素的位置不会发生变化</li><li>元素会从文档流中脱离</li><li>绝对定位会改变元素的性质，行内变成块，块变成行内</li><li>绝对定位会使元素提升一个层级</li><li>绝对定位元素是相对于其包含块进行定位的<br>什么是包含块（containing block）<br>正常情况下，包含块就是离当前元素最近的祖先块元素<br>绝对定位情况下，包含块就是离它最近的开启了定位的祖先元素，如果所有的祖先元素都没有开启定位，则根元素（html）就是它的包含块。<br>所以说绝对定位要和相对定位相结合使用</li></ol><h2 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h2><p>当设置position为fixed时，则开启了固定定位，固定定位也是一种绝对定位，所以大部分特点都和绝对定位一样，唯一的不同是其永远参照浏览器的视窗进行定位，就算设置相对定位也不会变化，这种定位最多的用法就是制作网页上的小广告</p><h2 id="粘滞定位"><a href="#粘滞定位" class="headerlink" title="粘滞定位"></a>粘滞定位</h2><p>当设置为sticky时，则开启了粘滞定位，其和相对定位的特点基本一致，不同的是粘滞定位可以在元素到达某个位置将其固定</p><h2 id="绝对定位元素的布局"><a href="#绝对定位元素的布局" class="headerlink" title="绝对定位元素的布局"></a>绝对定位元素的布局</h2><p>在没开启绝对定位时，包含块的内容区的宽度 = margin-left + border-left + padding-left + width + padding-right + border-right + margin-right<br>而当我们开启绝对定位后，布局等式就需要添加left和right两个值；当等式无法成立时，就会触发过度约束，这九个值中没有auto时自动调整right的值，如果有auto则自动调整auto，以使等式满足<br>可以设置auto值的属性是margin、width、left、right，其中left和right的值默认是auto<br>垂直方向布局的等式也必须满足：包含块的内容区的高度 = top + margin-top/bottom + padding-top/bottom + border-top/bottom + bottom。</p><h2 id="元素的层级"><a href="#元素的层级" class="headerlink" title="元素的层级"></a>元素的层级</h2><p>对于开启了定位的元素，可以通过z-index属性来指定元素的层级，相当于ps中图层的顺序，z-index需要一个整数作为参数，数字越大层级越高，代表着越优先显示，如果元素的层级一样，则优先显示靠下的元素，另外祖先元素的层级再高也不会盖住后代元素</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浮动</title>
      <link href="/2021/12/09/%E6%B5%AE%E5%8A%A8/"/>
      <url>/2021/12/09/%E6%B5%AE%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="浮动的简介"><a href="#浮动的简介" class="headerlink" title="浮动的简介"></a>浮动的简介</h2><p>浮动是通过float属性来设置的，元素设置浮动后悔完全从文档流中脱离，不再占用文档流的位置，所以根据逻辑该元素下方的元素因为还在文档流中所以会自动的向上移动<br>这样会出现元素盖住元素的情况，这时就要结合定位来重新设置布局位置。</p><blockquote><p>浮动float的可选值<br>    none 默认值，元素不浮动<br>    left 元素向左浮动<br>    right 元素向右浮动 </p></blockquote>总结：浮动目前的主要作用就是让页面中的元素可以水平排列，通过浮动可以制作一些水平方向的布局<h2 id="浮动的特点"><a href="#浮动的特点" class="headerlink" title="浮动的特点"></a>浮动的特点</h2><ol><li>浮动元素会完全脱离文档流，不再占用文档流中的位置</li><li>设置浮动以后元素会向父元素的左侧或者右侧移动</li><li>浮动元素默认不会从父元素中移出</li><li>浮动元素向左或右移动时，不会超过它前边的浮动元素</li><li>如果浮动元素的上边是一个没有浮动的  块  元素，则浮动元素无法上移</li><li>浮动元素不会超过它上边的浮动的  兄弟  元素，最多和它一样高</li><li>浮动元素不会盖住文字，文字会自动环绕在浮动元素的周围，所以我们可以利用浮动来设置文字环绕图片的效果，当然想要分离的话可以设置文字所在的盒子模型的外边距远离浮动元素</li><li>元素设置浮动以后，块元素不再独占页面的一行，脱离文档流以后块元素的宽度和高度默认都会被内容撑开;行内元素脱离文档流以后会变成块元素，特点和块元素一样;总的来说脱离文档流以后不需要区分块和行内了</li></ol><h2 id="关于高度塌陷的问题"><a href="#关于高度塌陷的问题" class="headerlink" title="关于高度塌陷的问题"></a>关于高度塌陷的问题</h2><p>在浮动的布局中，父元素的高度默认是被子元素撑开的，当子元素浮动后，它会从文档流中脱离，无法撑起父元素的高度从而导致父元素的高度丢失，然后导致它下方的元素会自动上移导致页面的布局混乱。<br>我们可以通过设置开启BFC（块级格式化环境）来解决，BFC是CSS的一个隐含的属性，开启后该元素会变成一个独立的布局区域(1.元素不会被浮动元素所覆盖；2.子元素和父元素外边距不会重叠；3.可以包含浮动的子元素)<br>开启BFC的方法：1.设置元素的浮动（不推荐）；2.将元素设置为行内块元素（不推荐）；3.将元素的overflow属性设置为一个非visible的值（最常用的方法：overflow:hidden 开启BFC使其可以包含浮动元素）。</p><p>我们也可以使用clear属性，作用是清除浮动元素对当前元素所产生的影响；可选值：left,right,both(清除两侧中最大影响的那侧)。<br>最终方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .clearfix::before,</span><br><span class="line">    .clearfix::after&#123;</span><br><span class="line">        context:&#x27;&#x27;;</span><br><span class="line">        display: table;</span><br><span class="line">        clear: both;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>clearfix这个样式可以同时解决高度塌陷和外边距重叠的问题，当遇到哲学问题时，直接使用clearfix这个类即可<br>这是万能代码专门解决高度塌陷。<br>但是这种方法并不是所有编译器都可以使用。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盒子模型相关知识</title>
      <link href="/2021/10/27/%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
      <url>/2021/10/27/%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="文档流"><a href="#文档流" class="headerlink" title="文档流"></a>文档流</h2><p>首先网页是一个多层的结构，一层摞着一层，在这些层中最下面的一层叫做文档流，我们写的元素默认都是在文档流中的；因此元素主要有两种状态：在文档流中和脱离文档流。<br>那么元素在文档流中有什么特点呢，首先是块元素，它会在页面中独占一行，宽度是父元素的全部，高度是被内容撑开的；其次是行内元素，它不会占页面一行只占自身大小，如果一行中不能容纳所有的行内元素则会换行，它的高度和宽度都是被内容撑开的</p><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p>我们在编写一个页面时首先需要将整个页面做布局，将每个部分看做一个矩形的盒子后那么我们所做的操作就是将不同的盒子摆到不同的位置，每个盒子都由几个部分组成</p><h3 id="内容区（content）"><a href="#内容区（content）" class="headerlink" title="内容区（content）"></a>内容区（content）</h3><p>内容区就是文章之类的内容显示的位置，内容区的大小由width和height两个属性设置，也可以用bgcolor设置背景，这里不再赘述。</p><h3 id="边框（border）"><a href="#边框（border）" class="headerlink" title="边框（border）"></a>边框（border）</h3><p>边框属于盒子的边缘，设置边框至少需要设置其宽度（width），颜色（color）和样式（style）。<br>首先是border-width，一般默认值是三个像素，例如：border-width: 3px;，它可以用来指定四个方向的边框的宽度，其顺序是上右下左：</p><blockquote><p>指定一个值时 四个边界相同<br>指定两个值时 第一个值表示上下，第二个值表示左右<br>指定三个值时，第一个值表示上，第二个值表示左右，第三个值表示下<br>指定四个值时，依次上右下左</p></blockquote>另外除了border-width这种写法，还有一组border-xxx-width写法，xxx可以是top/right/bottom/left，这样写可以单独设置一个边的宽度其次是border-color，它用来指定边框的颜色，运用的规则和写法和上面width相同，当然它可以省略不写，那么它会自动使用内容区color的值或者变成黑色最后是border-style，它指定边框的样式，它的运用规则和写法也和width相同，它有几个常用的值<blockquote><p>none 无边框<br>dotted 点状虚线<br>solid 实线<br>dashed 虚线<br>double 双实线<br>等等</p></blockquote>border的这些设置可以简写，没有顺序要求，例如：border: 10px orange solid。<h3 id="内边距（padding）"><a href="#内边距（padding）" class="headerlink" title="内边距（padding）"></a>内边距（padding）</h3><p>内容区和边框之间的距离被称为内边距，内边距的设置会影响到盒子的大小并且背景颜色会延伸到内边距上，所以一个盒子的可见框的大小是由内容区、内边距、边框共同决定的，在计算盒子大小时需要将这三个区域加在一起计算，另外padding也是可以简写的，例如：padding: 10px 20px 30px 40px;</p><h3 id="外边距（margin）"><a href="#外边距（margin）" class="headerlink" title="外边距（margin）"></a>外边距（margin）</h3><p>边框外边的区域被称为外边距，它不会影响盒子可见框的大小，但外边距会影响盒子的位置，其简写用法和padding一样</p><blockquote><p>margin-top      上外边距，设置一个正值，元素会向下移动<br>margin-right    默认情况下设置不会产生效果<br>margin-bottom   下外边距，设置一个正值，其下边的元素会向下移动<br>margin-left     左外边距，设置一个正值，元素会向右移动</p><p>margin也可以设置负值，如果负值则对应元素会向相反的方向移动</p></blockquote>元素在页面中默认是按照自左向右的顺序排列的，所以当设置下和右外边距时会移动其他元素另外关于设置盒子的大小，有box-sizing这个属性控制<blockquote><p>content-box 默认值，宽度和高度用来设置内容区的大小<br>border-box  宽度和高度用来设置整个盒子可见框的大小（border+padding+content）</p></blockquote><h2 id="盒子的布局"><a href="#盒子的布局" class="headerlink" title="盒子的布局"></a>盒子的布局</h2><p>盒子的布局分为水平布局和垂直布局。</p><ol><li>在水平布局中元素的位置由margin/border/padding-left,width,padding/border/margin-right,这七个属性共同决定的，一个元素在其父元素中，水平布局必须满足这七个属性相加的大小=其父元素内容区的宽度，这是必须满足的条件。<br>当然如果等式没有成立，等式也会自动调整：1.如果七个值中没一个设置为有auto，则浏览器会自动调整margin-right值以使等式成立；2.如果某个值设置为auto则会自动调整那个值，其中可以设置auto值的属性有width、margin-left、margin-right<br>如果将width和其中一个外边距设置为auto，则宽度会调整到最大，设置为auto的外边距会自动为零。<br>如果将三个值都设置为auto，则外边距都是0，width最大。<br>如果将两个外边距设置为auto，width为固定值，则将外边距设置为相同的值。<br>利用这个特点可以使元素在其父元素中水平居中。</li><li>在垂直布局中,如果子元素在大小超过父元素则会溢出，这时就需要overflow属性来设置父元素如何处理溢出的子元素<blockquote></li></ol><p>visible 默认值，子元素会从父元素溢出，在父元素外部的位置显示<br>hidden  溢出内容将被隐藏<br>scroll  生成两个滚动条，通过滚动条查看完整内容<br>auto    根据需要生成滚动条</p></blockquote><h2 id="外边距的折叠"><a href="#外边距的折叠" class="headerlink" title="外边距的折叠"></a>外边距的折叠</h2><p>相邻两个元素的垂直方向的外边距会发生重叠。如果两个元素是兄弟元素，那么外边距会取这两个中的较大值，两种特殊情况：1.两个外边距一正一负那么取两者的和；2.如果外边距都是负值，则取绝对值较大的。如果两个元素是父子元素则子元素的上外边距会传递给父元素。<br>总之如果是兄弟元素之间的外边距重叠是有利的不需要进行处理，而如果是父子元素间的话就必须进行处理</p><h2 id="轮廓阴影与圆角"><a href="#轮廓阴影与圆角" class="headerlink" title="轮廓阴影与圆角"></a>轮廓阴影与圆角</h2><p>box-shadow用于设置元素的阴影效果，例如：box-shadow: 20px 20px 10px rgba(0,0,0,.3)。阴影不会影响到页面布局，第一个值是设置阴影的水平位置正值向右负值向左；第二个值是设置阴影的垂直位置正值向下负值向上；第三个值是阴影的模糊半径；第四个值是阴影颜色和透明度。<br>border-radius用于设置圆角，设置的是半径大小</p><blockquote><p>border-top-left-radius<br>border-top-right-radius<br>border-bottom-left-radius<br>border-bottom-right-radius<br>例如：border-top-left-radius: 50px 100px;<br>第一个值是水平方向，第二个值是垂直方向,两个值就是椭圆，一个值就是圆</p><p>border-radius也可以分别指定四个圆角<br>四个值 左上 右上 右下 左下<br>三个值 左上 右上/左下 右下<br>两个值 左上/右下 右上/左下<br>一个值 全用<br>另外border-radius: 50% 直接设置为圆形</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单位知识</title>
      <link href="/2021/10/18/%E5%8D%95%E4%BD%8D%E7%9F%A5%E8%AF%86/"/>
      <url>/2021/10/18/%E5%8D%95%E4%BD%8D%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<p>样式中的单位知识特别说一下颜色单位，在CSS中可以直接使用颜色名来设置颜色例如yellow,red,orange；但是并不方便因为颜色是有很多的<br>这时我们就使用RGB值来设置，RGB就是red、green、blue三个单词的缩写，它通过三种颜色的不同浓度来调配出不同的颜色；每一种颜色的范围都在0-255（0%-100%）之间；例如RBG(0,0,255)；如果三个值都是0则为黑色如果都为255则就是白色<br>十六进制的RGB值，写法是color: #aabbcc；颜色浓度范围是00-ff；如果颜色两位两位重复可以进行简写，比如#aabbcc简写为#abc<br>还有一个叫RGBA的值，它是在RGB的基础上加了一个A表示不透明度，A的取值从0-1由完全透明到完全不透明，注意中间的取值是.5这样的而不是0.5；<br>还有一个HSL值，H表示色相（0-360），S表示饱和度（0%-100%），L表示亮度（0%-100%）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">background-color: red;</span><br><span class="line">background-color: rgb(255,0,0);</span><br><span class="line">background-color: rgb(0,255,0);</span><br><span class="line">background-color: rgb(0,0,255);</span><br><span class="line">background-color: rgb(106,153,85,.5);</span><br><span class="line">background-color: #ff0000;</span><br><span class="line">background-color: #ffff00;</span><br><span class="line">background-color: #ff0;</span><br><span class="line">background-color: #bbffaa;/*简写#bfa*/</span><br><span class="line">background-color: hsl(0,50%,50%,0.658);</span><br></pre></td></tr></table></figure><p>补充一些东西：<br>display属性是用来设置元素的显示类型的</p><blockquote><p>inline       将元素设置为行内元素<br>block        将元素设置为块元素<br>inline-block 将元素设置为行内块元素（行内块就是可以设置宽度和高度又不会独占一行）<br>table        将元素设置为一个表格<br>none         元素不在页面中显示</p></blockquote>visibility属性用来设置元素的显示状态<blockquote><p>visible 默认值，元素在页面正常显示<br>hidden  元素在页面中隐藏不显示，但占据页面的位置</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>样式的继承和选择器的权重</title>
      <link href="/2021/10/11/%E6%A0%B7%E5%BC%8F%E7%9A%84%E7%BB%A7%E6%89%BF%E5%92%8C%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E6%9D%83%E9%87%8D/"/>
      <url>/2021/10/11/%E6%A0%B7%E5%BC%8F%E7%9A%84%E7%BB%A7%E6%89%BF%E5%92%8C%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E6%9D%83%E9%87%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>继承是发生在祖先后代元素之间的，我们为一个元素设置的样式会应用到它的后代元素上，继承方便了我们的开发，利用继承我们可以将一些通用的样式统一设置到共同的祖先元素上，这样只需设置一次样式就可以让所有的元素都具有该样式。<br>当然也有注意点：并不是所有的样式都会被继承，比如背景相关、布局相关等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    p&#123;</span><br><span class="line">        color: red;</span><br><span class="line">        background-color: orange;</span><br><span class="line">    &#125;</span><br><span class="line">    div&#123;</span><br><span class="line">        color: yellow;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">        我是一个p元素</span><br><span class="line">        &lt;span&gt;我是p元素中的span&lt;/span&gt;</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        我是div元素</span><br><span class="line">        &lt;span&gt;</span><br><span class="line">            我是div中的span</span><br><span class="line">            &lt;em&gt;我是span中的em&lt;/em&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>最后看效果可知p和div的样式都成功应用到了各自的后代元素</p><h2 id="选择器的权重"><a href="#选择器的权重" class="headerlink" title="选择器的权重"></a>选择器的权重</h2><p>我们在使用CSS选择器时会思考这样一个问题，在设置样式时给同一个标签使用多个不同的选择器会如何？<br>比如给div标签同时设置id选择器、类选择器等等，那么div标签会使用哪个选择器呢<br>这就是样式的冲突：当通过不同的选择器选中相同的标签并且为相同的样式设置不同的值时，此时就会发生样式的冲突。发生样式冲突时应用哪个样式将会由选择器的权重（优先级）决定</p><blockquote> 选择器的权重<p>内联样式        1,0,0,0      &lt;div style=”…”&gt;&lt;/div&gt;<br>id选择器        0,1,0,0    #box{}<br>类与伪类选择器    0,0,1,0   .abc{}<br>元素（标签）选择器 0,0,0,1   p{}<br>通配选择器        0,0,0,0   *{}<br>继承的样式        没有优先级</p></blockquote>所以总体来说：内联>id>类>元素>通配>继承<p>比较优先级时：需要将所有的选择器的优先级进行相加计算，最后优先级越高则越优先显示（分组选择器是单独计算的）<br>注意：<br>1.选择器的累加不会超过其最大的数量级，例如类选择器再高也不会超过id选择器；<br>2.如果优先级计算后相同，此时优先使用靠下的样式；<br>3.在开发中慎用的一个东西，可以在一个样式的后面添加!important，此时该样式会获取最高的优先级甚至超过内联样式</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS选择器2</title>
      <link href="/2021/10/09/CSS%E9%80%89%E6%8B%A9%E5%99%A82/"/>
      <url>/2021/10/09/CSS%E9%80%89%E6%8B%A9%E5%99%A82/</url>
      
        <content type="html"><![CDATA[<p>1.属性选择器<br>当同一个页面中的同一种属性标签有不同的属性值时，它可以给指定的多个属性标签设置样式，格式：[属性名]{属性：属性值}</p><blockquote><p>[属性名]   选择含有指定属性的标签<br>[属性名=属性值]   选择器含有指定属性和属性值的元素<br>[属性名^=属性值]  选择属性值以指定值开头的元素<br>[属性名$=属性值]  选择属性值以指定值结尾的元素<br>[属性名*=属性值]  选择属性值中含有指定值的元素（不论在那个位置）<br>[属性名~=属性值]  选择属性值中含有指定值的元素（特指用空格分隔的字词列表）</p></blockquote>例如：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-tag">p</span><span class="selector-attr">[title=abc]</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">p</span><span class="selector-attr">[title$=<span class="string">&quot;abc&quot;</span>]</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>: yellow;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">&quot;abc&quot;</span>&gt;</span>少小离家老大回<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">titile</span>=<span class="string">&quot;abcdef&quot;</span>&gt;</span>乡音无改鬓毛衰<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">&quot;helloabc&quot;</span>&gt;</span>儿童相见不相识<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>笑问客从何处来<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.伪类选择器<br>伪类是不存在的类，特殊的类，伪类用来描述一个元素的特殊状态，比如：第一个子元素，被点击的元素，鼠标移入的元素等等；伪类一般使用“：”开头</p><blockquote>    <p>:first-child: 第一个子元素<br>:last-child: 最后一个子元素<br>:nth-child(): 选择第n个子元素(需要在括号内写数字)<br>    这种方法有几种特殊值：<br>        n 表示全选中，范围是0到正无穷<br>        2n 或 even 表示选中偶数位的元素<br>        2n+1 或 odd 表示选择奇数位的元素</p><p>以上伪类都是根据所有的子元素进行排序的，也就是说在列表标签中的li标签前加个别的标签就不管用了，但一般不会插别的标签</p><p>:first-of-type<br>:last-of-type<br>:nth-of-type<br>    这几个伪类都是在同类型元素中进行排序的，加别的标签也不要紧</p><p>:not() 否定伪类<br>    将符合条件的元素从选择器中去除</p></blockquote>例如:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">   ul &gt; li:first-of-type&#123;</span><br><span class="line">        color: red;</span><br><span class="line">    &#125;</span><br><span class="line">    ul &gt; li:not(:nth-of-type(3))&#123;</span><br><span class="line">        color: yellowgreen;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;span&gt;我是一个span&lt;/span&gt;</span><br><span class="line">        &lt;li&gt;1&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;2&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;3&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>3.超链接的伪类<br>超链接也可以添加伪类，较为简单</p><blockquote><p>:link 用于表示没访问过的链接（正常的连接），可以添加尺寸<br>:bisited 用于表示访问过的连接，由于隐私的原因，visited这个伪类只能修改链接的颜色，所以一般不会设置<br>:hover 用于表示鼠标的悬停状态<br>:active 用于表示鼠标的点击</p></blockquote>例子：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    a:link&#123;</span><br><span class="line">        color: red;</span><br><span class="line">    &#125;</span><br><span class="line">    a:visited&#123;</span><br><span class="line">        color: orange;</span><br><span class="line">    &#125;</span><br><span class="line">    a:hover&#123;</span><br><span class="line">        color: aqua;</span><br><span class="line">        font-size: 50px;</span><br><span class="line">    &#125;</span><br><span class="line">    a:active&#123;</span><br><span class="line">        color:yellowgreen;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;a href=&quot;https://www.baidu.com&quot;&gt;访问过的链接&lt;/a&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;a href=&quot;https://www.baidu123.com&quot;&gt;没访问过的链接&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>4.伪元素选择器<br>伪元素表示页面中一些特殊的并不真实存在的元素（特殊的位置），伪元素使用 : 开头；举个例子首先设置一个p标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;Hello Hello How are you&lt;/div&gt;</span><br><span class="line">&lt;p&gt;Lorem ipsum sit amet consectetur adipisicing elit.Atque velit modi veniam nisi veritatis tempore laborum nemo ipsa itaque optio.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>然后我们需要设置第一个字符“L”新格式，有两种方式达成：1.给L单独添加一个span标签在style中添加样式；2，使用伪元素<br>伪元素有以下这些</p><blockquote>    <p>:first-line 表示第一行<br>:selection 表示选中的元素<br>:before 元素的最开头<br>:after 元素的最结尾<br>    - before和after必须结合content属性来使用</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">p:first-letter&#123;</span><br><span class="line">    color: blue;</span><br><span class="line">    font-size: 30px;</span><br><span class="line">&#125;</span><br><span class="line">p:first-line&#123;</span><br><span class="line">    background-color: yellow;</span><br><span class="line">&#125;</span><br><span class="line">p:selection&#123;</span><br><span class="line">    background-color: greenyellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">div:before&#123;</span><br><span class="line">    content: &#x27;abc&#x27;;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br><span class="line">div:after&#123;</span><br><span class="line">    content: &#x27;haha&#x27;;</span><br><span class="line">    color: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">div:before&#123;</span><br><span class="line">    content: &#x27;『&#x27;</span><br><span class="line">&#125;</span><br><span class="line">div:after&#123;</span><br><span class="line">    content: &#x27;』&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>另外关于选择器的练习有一个经典网站链接:<a href="https://flukeout.github.io/#">跳转</a>它将所有选择器的语法都分别设计了几个题目，可以用于熟悉]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS选择器1</title>
      <link href="/2021/10/08/CSS%E9%80%89%E6%8B%A9%E5%99%A8/"/>
      <url>/2021/10/08/CSS%E9%80%89%E6%8B%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>CSS的选择器主要有五种类型但其实还可以细分出几个，首先是常用选择器，包括标记选择器（元素选择器）、id选择器、类选择器和通配选择器。</p><p>1.标记选择器<br>它是根据标签名来选中指定的元素，进行设置；语法是：标签名{}，例如：p{}、h1{}、div{}</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">p&#123;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br><span class="line">h1&#123;</span><br><span class="line">    color: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.id选择器<br>他是根据元素的id属性值来选中一个元素，语法：#id属性值{}；例如：#box{}、#red{};但这种选择器有很多的限制，首先只有页面上的标记（body标记以及被它包含的子标记）才能具有给定的id，并且每个id属性的取值必须唯一且只能用于指定的一个标记。id属性的取值必须以字母开头由字母、数字、下划线、连字符组成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    #red&#123;</span><br><span class="line">        color: red;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;p&gt;你好&lt;/p&gt;</span><br><span class="line">    &lt;p id=&quot;red&quot;&gt;你好&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>3.类选择器<br>根据元素的class属性值来选中一组元素，在任何合法的HTML标记中都可以使用class属性，在CSS中使用类选择器就可以基本舍弃id选择器了。语法：.class属性值，例如：.blue{}；另外一个标签中可以使用多个class每个之间用空格隔开</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.blue</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.abc</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;blue&quot;</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;blue abc&quot;</span>&gt;</span>我也是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>另外类选择器是可以重复使用的，多个标签可以用同一个class，所以延伸出通过class属性来为元素分组。</p><p>4.元素分组<br>元素分组包含两个选择器：交集选择器和并集选择器。<br>交集选择器的作用是选择同时符合多个条件的元素，语法：选择器1选择器2选择器n{}，需要注意的是如果里面含有标记选择器则需要以标记选择器开头，例如：div.red{}、.a.b.c{}，而在body页面的class中每个类之间要用空格隔开</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    div.red&#123;</span><br><span class="line">        font-size: 30px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .a.b.c&#123;</span><br><span class="line">        color: blue;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;red&quot;&gt;我是div&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;red2 a b c&quot;&gt;我是div2&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>并集选择器的作用是同时选择多个选择器对应的元素，语法：选择器1,选择器2,选择器n{}，例如：#b1,p,h1,span,div.red{}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">h1,span&#123;</span><br><span class="line">    color: green;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;标题&lt;/h1&gt;</span><br><span class="line">    &lt;span&gt;haha&lt;/span&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>5.关系选择器<br>每一个标签之间是有关系的</p><blockquote><pre><code>父元素：直接包含子元素的元素叫做父元素子元素：直接被父元素包含的元素是子元素祖先元素：直接或间接包含后代的元素叫做祖先元素；一个元素的父元素也是它的祖先元素后代元素：直接或间接被祖先元素包含的元素叫做后代元素，子元素也是后代元素兄弟元素：拥有相同父元素的元素是兄弟元素</code></pre></blockquote>这样我们引入了两个选择器：子元素选择器和后代元素选择器先写一份body里的内容例子,下面选择器的说明内容都是参照此内容<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;box&quot;&gt;</span><br><span class="line">        我是一个div</span><br><span class="line">        &lt;span&gt;我是div中的span元素&lt;/span&gt;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">            我是div中的p元素</span><br><span class="line">            &lt;span&gt;我是p元素中的span&lt;/span&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;div&gt;我是div中的div&lt;/div&gt;</span><br><span class="line">        &lt;span&gt;我是div中的span元素&lt;/span&gt;</span><br><span class="line">        &lt;div&gt;ws1&lt;/div&gt;</span><br><span class="line">        &lt;span&gt;我是div中的span元素&lt;/span&gt;</span><br><span class="line">        &lt;span&gt;我是div中的span元素&lt;/span&gt;</span><br><span class="line">        &lt;span&gt;我是div中的span元素&lt;/span&gt;</span><br><span class="line">        &lt;div&gt;ws2&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;span&gt;</span><br><span class="line">            我是div外的span</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>子元素选择器的作用是选择指定父元素的指定子元素，语法：父元素 &gt; 子元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">div.box &gt; span&#123;</span><br><span class="line">    color: orange;</span><br><span class="line">&#125;</span><br><span class="line">div &gt; p &gt; span&#123;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后代元素选择器的作用是选中指定元素内的所有指定的后代元素，语法：祖先 后代</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div span&#123;</span><br><span class="line">    color: skyblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外还有两个特殊的指定方法：<br>选择指定元素的下一个兄弟，必须是指定元素紧挨着的下一个兄弟，语法：前一个 + 下一个；例如：p + span只有span变化。但是如果在p和span标签中间随便添加一个其他标签比如div就失效了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p + span&#123;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选中指定元素的下边指定的所有兄弟，此时就不需要紧挨着了中间也可以任意插入标签，它只会选择指定的兄弟标签改变，语法：兄 ~ 弟，例如p ~ span,那么p标签后面的所有span标签都会被设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p ~ span&#123;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.通配选择器<br>它用于选中页面中的所有元素，语法：*{}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS的简介和语法</title>
      <link href="/2021/10/07/CSS%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E8%AF%AD%E6%B3%95/"/>
      <url>/2021/10/07/CSS%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>网页分为三个部分，分别是结构(HTML)，表现（CSS），行为(JavaScript);CSS又叫做层叠样式表，网页实际上是一个多层的结构，通过CSS可以分别为网页的每一层来设置样式。<br>在知道CSS之前，修改网页中的元素都是在每个标签中单独修改，这样做在做复杂网页时是很费时费力的，所以引入了CSS样式表，它有丰富的样式定义，并且易于使用和修改，将其单独存放在一个文件中可以应用给多个页面等等。<br>在这里介绍三种CSS修改元素的方式：<br>&nbsp;&nbsp;&nbsp;&nbsp;第一种方式便是最简单的在各个标签内部通过style属性来设置元素的样式，它又被称为内联样式或行内样式。但其含有的问题也十分明显，使用内联样式需要一个一个对标签设置，在很普通的页面中可以使用但开发时不要用内联方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red; font-size: 60px;&quot;</span> &gt;</span>锄禾日当午<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;第二种方法叫做内部样式表，样式编写在head中的style标签中，然后通过CSS的选择器来选中元素并设置各种样式，可以一次性多多个标签设置样式并且修改时只需要修改一处即可。它也有一些问题，对于单个网页来说很好用，但此方法也只能对这一个网页起作用，里面的样式不能跨页面进行复用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>锄禾日当午<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;第三种方式叫做外部样式表，将CSS样式编写在一个外部的CSS文件中然后通过link标签来引入外部的CSS，这意味着只要想使用这些样式的网页都可以对其进行引用使样式可以在不同的页面之间进行复用，另外将样式编写在外部的CSS文件中可以使用到浏览器的缓存机制，加快网页的加载速度提高用户的体验<br>首先我们需要编写一个简单的CSS文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: tomato;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后将其用于HTML页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;路径名&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><hr>CSS的语法，CSS里包含选择器和声明块，通过选择器可以选中页面中的指定元素，比如p的作用就是选中页面中所有的p元素；通过声明块来指定要为元素设置的样式，声明块有一个一个的声明组成，它是一个名值对结构例如：color:red;&nbsp;CSS中的注释会被浏览器自动忽略。]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>补档3(HTML基础)</title>
      <link href="/2021/09/26/%E8%A1%A5%E6%A1%A33/"/>
      <url>/2021/09/26/%E8%A1%A5%E6%A1%A33/</url>
      
        <content type="html"><![CDATA[<h1><strong>图像和多媒体文件</strong></h1><p>图像和多媒体文件都是网页中必不可少的元素，它们可以给网页添加不少的色彩，给用户提供更直观的感受<br>图片的格式有以下几种：<br>1.jpg：支持的颜色比较丰富，不支持透明效果，不支持动图，一般用来显示图片<br>2.gif：支持的颜色比较少，支持简单透明、颜色单一的图片和动图<br>3.png：支持的颜色丰富，支持复杂透明、颜色丰富的图片，不支持动图，它是专门为网页而生的<br>4.webp：它是谷歌新推出的专门用来表示网页中的图片的格式，它拥有其他图片格式所有的优点，文件还特别小，缺点是兼容性不好</p><h2 id="图像（图片）"><a href="#图像（图片）" class="headerlink" title="图像（图片）"></a>图像（图片）</h2><p>图片标签img 用于向当前页面引入外部图片，img标签时一个单标签，它有两个必选的属性：src和alt</p><blockquote>src 属性指定的是外部图片的路径（路径在上一篇），也可以直接复制互联网上的图片的ip地址</blockquote><blockquote>alt 用于图片的描述，这个描述默认情况下不会显示，只会在网络不良或者浏览器无法加载图片时显示，而alt中的内容会提供给搜索引擎来识别图片，如果不写就不会被搜索引擎所识别</blockquote>img标签还有一些可选属性<blockquote>        <pre><code>    1.name：规定图像的名称，text,    2.height：定义图像高度,px、%    3.width：设置图像宽度,px、%    4.align：规定如何根据周围的文本来排列图像，分水平和垂直两个方向，水平：top,middle,bottom; 垂直：left,center,right    5.border：定义图像周围的边框，可以设置边框的宽度，但颜色不可以调整，在没有图片时是黑色；可以通过CSS的样式表来修改边框的线形、宽度和颜色    6.hspace：定义图像左侧和右侧的空白,px    7.vspace：定义图像顶部和地步的空白,px    8.usemap：将图片定义为客户器端图像映射    </code></pre></blockquote>*一般情况在pc端，不建议修改图片的大小,需要多大的图片就裁多大，但是在移动端，经常需要对图片进行缩放（大图缩小）*hspace和vspace两个属性一般配合使用控制图像的水平距离和垂直距离，但实际应用中很少这两个加align属性使用，一般使用CSS*scr属性中除了使用路径添加图片，也可以使用base64编码，将图片转为字符，一般用于一些需要和页面一起加载的图片，在百度里有转码的网站直接使用*我们在编写页面时，在选择图片格式时按照：效果一样用小的，效果不一样用效果好的<h3 id="设置图像的热区链接"><a href="#设置图像的热区链接" class="headerlink" title="设置图像的热区链接"></a>设置图像的热区链接</h3><p>除了对整幅图像设置超链接外</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">图片添加超链接：</span><br><span class="line">&lt;a href=&quot;https://www.baidu.com&quot;&gt;&lt;img src=&quot;./img/36686900_p0.jpg&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>我们也可以将图像划分为若干区域，这叫做“热区”，每个区域都可以设置不同的超链接，此时包含热区的图像可以称为映射图像（usemap属性），usemap属性与map标记的name或id属性相关联，这用于适应不同浏览器的需要，usemap属性的值以“#”开头后面紧跟“映射图像的名称”。它指向特殊的&lt;map&gt;区域，用户用鼠标点击就会将其转换为特定的行为，包括加载和显示另一个文档</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">基本语法：</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图像地址&quot;</span> <span class="attr">usemap</span>=<span class="string">&quot;#映射图像名称&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">map</span> <span class="attr">name</span>=<span class="string">&quot;映射图像名称&quot;</span> <span class="attr">id</span>=<span class="string">&quot;映射图像名称&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;热区形状1&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;热区坐标1&quot;</span> <span class="attr">href</span>=<span class="string">&quot;URL1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;热区形状2&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;热区坐标2&quot;</span> <span class="attr">href</span>=<span class="string">&quot;URL2&quot;</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure><p>map标签是双标签，属性name和id的属性值是映射图像名称，与img标签的usemap属性的值关联。<br>area标签是单标签，定义图像映射的区域。<area>标签总是嵌套在<map></map>标签中。该标签有三个属性，shape(矩形区域rect,圆形区域circle,多边形区域poly);coords((x1,y1,x2,y2),(center-x,center-y,radius(圆心和半径)),(x1,y1,x2,y2,…,xn,yn,x1,y1（多边形区域要首尾相连）));href(链接地址)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">例子：</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;tu.jpg&quot;</span> <span class="attr">align</span>=<span class="string">&quot;botton&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;150&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">border</span>=<span class="string">&quot;3&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片&quot;</span> <span class="attr">usemap</span>=<span class="string">&quot;#tu&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span> <span class="attr">name</span>=<span class="string">&quot;tu&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;circle&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">coords</span>=<span class="string">&quot;50,50,30&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;百度&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="多媒体文件"><a href="#多媒体文件" class="headerlink" title="多媒体文件"></a>多媒体文件</h2><p>页面中的多媒体文件包括音频文件、视频文件、Flash文件，可以为网页添加背景音乐等效果；使用embed双标签，可以播放的文件类型有Midi、Mav、AIFF、SWF、AV、MP3、MOV、AVI等。</p><blockquote><p>embed标签的属性有：<br>width、height: 整数,px；在设置播放声音、音乐文件作为背景音乐时，必须同时设置为0；播放视频时要设置数值否则不显示播放界面<br>src: 设置媒体文件的路径，<br>controls: 是否允许用户控制播放，无属性值<br>autostart: 逻辑值，true为自动播放，false为不自动播放<br>loop: 逻辑值，规定音频或视频文件是否循环（true/false）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">基本语法</span><br><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&quot;多媒体文件&quot;</span> <span class="attr">width</span>=<span class="string">&quot;界面的宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;界面的高度&quot;</span> <span class="attr">autostart</span>=<span class="string">&quot;true/false&quot;</span> <span class="attr">loop</span>=<span class="string">&quot;true\false&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="滚动文字"><a href="#滚动文字" class="headerlink" title="滚动文字"></a>滚动文字</h2><p>滚动文字也是多媒体文件的一种，通过marquee双标签添加滚动文字内容，增加动态效果</p><blockquote><p>marquee标签的属性除了width和height属性外：<br>bgcolor: 设置滚动条的背景颜色，使用十六进制和rgb()<br>loop: 设置是否循环滚动和循环播放次数，默认情况下循环滚动，次数设置为整数，-1表示无限循环<br>direction: 设置滚动方向，默认是从右到左，属性值：up(向上滚动)，down(向下滚动)，left(向左滚动)，right(向右滚动)<br>behavior: 设置滚动方式，属性值：scroll(循环滚动，默认值)，slide(滚动一次就停止)，alternate(来回交替滚动)<br>**当loop设置循环和behavior设置滚动一次就停止冲突时，遵循behavior设置<br>scrollamount: 设置滚动文字速度，实际上就是滚动文字每次移动的长度，这个长度用数字表示，单位是像素px<br>scrolldelay: 设置滚动文字延迟，延迟时间以毫秒为单位，其值越小滚动速度越快<br>hspace和vspace: 设置滚动空白空间，指的是滚动文字背景和它周围的文字及图片之间的空白空间范围，属性值是整数，px</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">基本语法：</span><br><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">width</span>=<span class="string">&quot;&quot;</span> <span class="attr">height</span>=<span class="string">&quot;&quot;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;&quot;</span> <span class="attr">direction</span>=<span class="string">&quot;up/down/left/right&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">behavior</span>=<span class="string">&quot;scroll/slide/alternate&quot;</span> <span class="attr">hspace</span>=<span class="string">&quot;&quot;</span> <span class="attr">vspace</span>=<span class="string">&quot;&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">scrollamount</span>=<span class="string">&quot;&quot;</span> <span class="attr">scrolldelay</span>=<span class="string">&quot;&quot;</span> <span class="attr">loop</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    你好</span><br><span class="line"><span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure><p>*另外还有onMouseOver=”this.stop()”和onMouseOut=”this.start()”属性，分别表示当光标移动到滚动区域暂停滚动 和 当鼠标移出滚动区域将继续滚动<br><marquee width="100" height="100" onMouseOver="this.stop()" onMouseOut="this.start()">你好</marquee></p><h2 id="浮动框架（内联框架）"><a href="#浮动框架（内联框架）" class="headerlink" title="浮动框架（内联框架）"></a>浮动框架（内联框架）</h2><p>浮动框架用于在当前页面中引入一个其他页面，使用iframe双标签</p><blockquote>    除了熟知的src、width、height属性外：    name: 设置框架名称    frameborder: 设置框架边框，属性值只有0和1，少数情况需要用到，0表示没有、1表示有    scrolling: 设置框架滚动条    marginwidth: 设置框架左右边距    marginheight: 设置框架上下边距</blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://bilibili.com&quot;</span> <span class="attr">width</span>=<span class="string">&quot;800&quot;</span> <span class="attr">height</span>=<span class="string">&quot;600&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML基础 </tag>
            
            <tag> 补档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>补档2(HTML基础)</title>
      <link href="/2021/09/25/%E8%A1%A5%E6%A1%A32/"/>
      <url>/2021/09/25/%E8%A1%A5%E6%A1%A32/</url>
      
        <content type="html"><![CDATA[<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>在HTML中列表分为五种：有序列表，无序列表，定义列表，菜单列表，目录列表。<br>其中常用的是：无序列表，有序列表和定义列表。</p><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>无序列表，使用ul标签来创建，使用li标签表示列表项，内置type属性(属性值: circle,disc,square)<br>1.circle: 空心圆形<br>2.disc: 实心圆形<br>3.square: 实心正方形<br>每个li标签都可以单独设置type值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">无序列表</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;属性值&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>结构<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">type</span>=<span class="string">&quot;属性值&quot;</span>&gt;</span>表现<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>行为<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>有序列表，使用ol标签来创建，使用li标签表示列表项，内置type属性(属性值: 1,A,a,i,I),内置start属性。<br>type属性，表示列表前的编号，编号是有序的，五种类型；start属性用来定义有序列表的起始编号，默认是1，但当设置start=”5”,type=”1”时，表示从第5个开始编号</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">有序列表</span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;属性值&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>结构<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">type</span>=<span class="string">&quot;属性值&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span>&gt;</span>表现<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>行为<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h3><p>定义列表，使用dl标签来创建，使用dt来表示定义的内容，使用dd来对内容进行解释说明</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">定义列表</span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>项目1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>描述1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>描述2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>描述3<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>联系人:<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>张有之<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>电话: 010-11011011<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>E-mall: xyz@sina.com<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><p>不同的列表之间是可以相互嵌套的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">列表嵌套</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        aa</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>aa-1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>aa-2</span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>aa-1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>aa-2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>超链接可以让我们从一个页面跳转到其他页面，或者是当前页面的其他位置，我们使用 a标签 来定义超链接，内置href属性(href指定跳转的目标途径，值可以是一个外部网站的地址也可以是内部页面的地址)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">超链接</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu123.com&quot;</span>&gt;</span>超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span>超链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;内部链接&quot;</span>&gt;</span>超链接3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>超链接也是行内元素，在a标签中可以嵌套除它自身外任何元素<br>1.target属性，属性值（_self,默认值,在当前页面中打开超链接; _blank,在一个新的页面最后打开超链接）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://www.baidu.com&quot; target=&quot;_blank&quot;&gt;超链接&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>2.可以直接将超链接的href属性设置为#，这样点击超链接之后，页面不会发生跳转，而是转到当前页面的顶部的位置。而如果需要转到页面的指定位置，只需要将href属性设置为 #+id属性值<br>id属性(唯一不重复): 每一个标签都可以添加一个id属性，id都是字母开头区分大小写，每个id属性就是元素的唯一标识，同一个页面不能出现重复的id属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#B&quot;&gt;去下一段&lt;/a&gt;</span><br><span class="line">&lt;p id=&quot;B&quot;&gt;内容&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>*在开发中可以将#作为超链接的路径的占位符使用<br>*可以使用javascript:;来作为href的属性，此时点击这个超链接什么也不会发生</p><h2 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h2><p>在超链接部分我们知道了链接可以添加内部链接来实现跳转到服务器内部的页面，这时我们在href属性中填写的就是路径。路径分为相对路径和绝对路径：<br>我们以路径 C:\Users\图片\1.png 举例（其中1.png代表着图片）,绝对路径就是从盘符开始到文件的路径，也就是前面写的这个路径,当我们编辑的文件和所要加入到元素不在同一文件夹时需要这样编写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">绝对路径</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;C:\Users\图片\1.png&quot;</span>&gt;</span>链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>路径的重点在于相对路径，在跳转到一个服务器内部的页面时，一般我们会使用相对路径; 相对路径都会使用.或者..开头: ./或者../ ; 如果这两种都不写就相当于默认用了./ ; 那么./和../的区别在哪呢？</p><blockquote>./表示当前文件所在的目录，当前文件就是1.png ./就等于目录: 图片</blockquote><blockquote>../表示当前文件的所在目录的上一级目录，也就是目录: 图片 的上一级目录: Users</blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">相对路径</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./1.png&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;../1.png&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML基础 </tag>
            
            <tag> 补档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>补档1(HTML基础)</title>
      <link href="/2021/09/25/%E8%A1%A5%E6%A1%A31/"/>
      <url>/2021/09/25/%E8%A1%A5%E6%A1%A31/</url>
      
        <content type="html"><![CDATA[<h2 id="标签的属性"><a href="#标签的属性" class="headerlink" title="标签的属性"></a>标签的属性</h2><p>在HTML中有许多的标签，例如: &lt;h1&gt; &lt;p&gt;<br>每个标签都可以设置属性，它控制着标签的内容如何显示，属性的写法是一个名值对。例如：&lt;p size=”5”&gt;&lt;/p&gt;<br>在写属性时需要将其与标签名或其他属性用空格隔开，像前一个例子；另外属性的编写需要根据文档中的规定，<br>像size属性有属性值，用引号包住，而有些属性却没有</p><h2 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h2><p>我们在编写HTML时会用到标点符号，而有一些特殊符号是不能直接在HTML中编写的，比如连续的空格，左右尖括号等<br>连续的空格会被浏览器自动解析为一个空格，所以我们需要使用html中的转义字符（实体）。<br>&amp;nbsp(空格);<br>&amp;lt(左尖括号);<br>&amp;gt(右尖括号);</p><h2 id="meta标签"><a href="#meta标签" class="headerlink" title="meta标签"></a>meta标签</h2><p>首先meta标签不是给用户看的，它位于HTML文档头部的&lt;head&gt;标记 和&lt;title&gt;标记之间，<br>它主要用于设置网页中的一些元数据，它有两个重要的属性：name(指定的数据的名称)和content(指定的数据的内容)<br><br><br>1.Keywords (关键字)<br>说明：告诉搜索引擎你网页的关键字是什么，可以用多个关键词，每个要逗号隔开<br>用法：&lt;meta name=”keywords” content=”HTML,CSS，Javascrip”&gt;<br>2.Description (网页描述)<br>说明：告诉搜索引擎你的网页主要内容。<br>用法：&lt;meta name=”description” content=”京东JD.COM-专业的综合网上购物商城”&gt;<br>3.Robots (机器人向导)<br>说明：Robots用来告诉搜索机器人哪些页面需要索引，哪些页面不需要索引。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Content的参数有all、none、index、noindex、follow、nofollow,默认是all。<br>用法：&amp;ltmeta name=”robots” content=”All|None|Index|Noindex|Follow|Nofollow”&amp;gt</p><blockquote>all:文件将被检索,且页面上的链接可以被查询;</blockquote><blockquote>none:文件将不被检索,且页面上的链接不可以被查询;(和"noindex, no follow" 起相同作用)</blockquote><blockquote>index:文件将被检索;（让robot/spider登录）</blockquote><blockquote>follow:页面上的链接可以被查询;</blockquote><blockquote>noindex:文件将不被检索,但页面上的链接可以被查询;(不让robot/spider登录)</blockquote><blockquote>nofollow:文件将不被检索,页面上的链接可以被查询。(不让robot/spider顺着此页的连接往下探找)</blockquote>>4.Author (作者)说明：标注网页的作者或制作组,emall用法：&lt;meta name="author" content="苦橙，苦橙@qq.com"&gt;5.Copyright (版权)说明：标注版权用法：&lt;meta name="copyright" content="本blog版权归苦橙所有"&gt;6.Generator (编辑器)说明：编辑器的说明用法：&lt;meta name="generator" content="PCDATA|FrontPage|"&gt;注意：Content="你所用编辑器"7.Revisit-after (重访)说明：通知搜索引擎多少天访问一次用法：&lt;meta name="revisit-after" content="7 days"&gt;<p>————————————————</p><strong>此段借鉴了CSDN博主「清枫草塘」的原创文章,原文链接：https://blog.csdn.net/freshlover/article/details/25322839/</strong><h2 id="语义化的标签"><a href="#语义化的标签" class="headerlink" title="语义化的标签"></a>语义化的标签</h2><p>在网页中HTML专门用来负责网页的结构，在使用标签时，最应该关注的是标签的语义<br>首先是标题标签: 标题分为六级，h1 ~ h6，重要性逐渐递减，h1标签在网页中的重要性仅次于title标签，一般情况下标题标签只会使用到h1 ~ h3<br>例如:<br>&lt;一级标签&gt;<br>&lt;二级标签&gt;<br>标题分组使用hgroup标签，可以将一组相关的标题同时放入到hgroup标签中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>绝句<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>其一<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hgroup</span>&gt;</span></span><br></pre></td></tr></table></figure><p>段落标签: p; p标签也是一个块元素; 还有一些修饰用的标签; 例如: em标签表示语音语调的加重; strong标签强调重要内容; blockquote标签表示一个长引用; q标签表示一个短引用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>在p标签中的内容就表示一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>今天天气<span class="tag">&lt;<span class="name">em</span>&gt;</span>真<span class="tag">&lt;/<span class="name">em</span>&gt;</span>不戳<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>今天必须写完<span class="tag">&lt;<span class="name">strong</span>&gt;</span>作业<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">鲁迅：</span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">这句话我没说过！</span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line">子曰：<span class="tag">&lt;<span class="name">q</span>&gt;</span>学而不思则罔，思而不学则殆<span class="tag">&lt;/<span class="name">q</span>&gt;</span></span><br></pre></td></tr></table></figure><p>另外：换行标签: br; 水平分割线: hr; 拼音/音标注释标签: ruby和rt/rp; 段落缩减(5个字符): blockquote;<br><br><br>补充：header表示网页的头部; main表示网页的主体部分(一个页面只会有一个main); footer表示页面的底部; nav表示页面中的导航; aside侧边栏; acticle表示一个独立的文章; </p><p>section表示一个独立的区块，上边的标签都不能表示时使用; div没有语义，万能标签，就用来表示一个区块，目前来讲div还是我们主要的布局元素; span行内元素，没有任何的语义，一般用于在网页中选中文字</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML基础 </tag>
            
            <tag> 补档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/09/21/hello-world/"/>
      <url>/2021/09/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>开始~第一篇测试blog</title>
      <link href="/2021/09/19/%E7%AC%AC%E4%B8%80%E7%AF%87blog/"/>
      <url>/2021/09/19/%E7%AC%AC%E4%B8%80%E7%AF%87blog/</url>
      
        <content type="html"><![CDATA[<p>这是我的第一篇测试blog，接下来我会更新自己的学习日志，欢迎大家一起学习进步，可以通过qq和邮箱联系我</p><h2 id="测试目录"><a href="#测试目录" class="headerlink" title="测试目录"></a>测试目录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for(int a=0;a&lt;5;a++)&#123;</span><br><span class="line">    int sum;</span><br><span class="line">    sum += a;</span><br><span class="line">    &#125;</span><br><span class="line">system.out.println(sum);</span><br><span class="line">system.out.println(sum);</span><br><span class="line">system.out.println(sum);</span><br><span class="line">system.out.println(sum);</span><br><span class="line">system.out.println(sum);</span><br><span class="line">system.out.println(sum);</span><br></pre></td></tr></table></figure><h2 id="测试目录2"><a href="#测试目录2" class="headerlink" title="测试目录2"></a>测试目录2</h2><p>你好你好你好你好你好你好你好你好你好<br>你好你好你好你好你好你好你好<br>你好你好你好你好你好你好<br>你好你好你好你好你好你好</p><p>你好你好</p><h3 id="测试目录三"><a href="#测试目录三" class="headerlink" title="测试目录三"></a>测试目录三</h3><p>好了好了好了好了好了好了好了好了好了好了好了好了<br>好了好了好了好了好了好了好了好了好了好了好了好了</p>]]></content>
      
      
      
        <tags>
            
            <tag> 开始 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
